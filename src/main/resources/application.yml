server:
  port: ${PORT:8080}
  
# --- ACTUATOR ---
management.context-path: /mgmt
info:
  app:
    version: "@project.version@"
    build-timestamp: "@build.timestamp@"
    spring-cloud-version: "@spring-cloud.version@" 
  java:
    source: "@java.version@"
  build:
    source-encoding: "@project.build.sourceEncoding@"
    out-encoding: "@project.reporting.outputEncoding@"

# --- EUREKA ---
eureka:
  instance:
    leaseRenewalIntervalInSeconds: 10
    statusPageUrlPath: ${management.context-path}/info
    healthCheckUrlPath: ${management.context-path}/health
    metadataMap:
      management.context-path: ${management.context-path}
  client:
    registerWithEureka: true
    fetchRegistry: true
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${EUREKA_SERVICE_URL:http://localhost:8761}/eureka/

# --- JACKSON ----
spring.jackson:
  serialization:
    WRITE_DATES_AS_TIMESTAMPS: false
    FAIL_ON_EMPTY_BEANS: false
  deserialization:
    FAIL_ON_UNKNOWN_PROPERTIES: false
  parser:
    ALLOW_COMMENTS: true
    ALLOW_UNQUOTED_FIELD_NAMES: true
    ALLOW_SINGLE_QUOTES: true
    
# --- TOMCAT JDBC ---
#spring.datasource.tomcat:
#  test-on-borrow: true
#  validation-query: SELECT 1
#  validation-interval: 30


### test and validation for connection
spring.datasource: 
  test-on-borrow: true
  validation-query: SELECT 1
### remove connection when abolish
  remove-abandoned: true
  remove-abandoned-timeout: 30
### Settings of Connection pool
  max-active: 50
  max-idle: 5
  min-idle: 5
  initial-size: 5
## Number of ms to wait before throwing an exception if no connection is available.
  max-wait: 10000

    